<?php

namespace LSTATS\RiotBundle\Repository;

use LSTATS\RiotBundle\Services\MatchsService;

/**
 * SummonerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SummonerRepository extends \Doctrine\ORM\EntityRepository
{
    public function getSummonerRankedStats($summoner)
    {
        try {
            $query = $this->getEntityManager()
                ->createQuery('SELECT AVG(s.kills) AS Kills,
                                    AVG(s.deaths) AS Deaths,
                                    AVG(s.assists) AS Assists,
                                    (AVG(s.kills)+AVG(s.assists)) / AVG(s.deaths) AS KDA,
                                    AVG(s.killingSprees) AS KillingSprees,
                                    AVG(s.totalDamageDealt) AS DamagesDealt,
                                    AVG(s.totalDamageDealtToChampions) AS DamagesToChampions,
                                    AVG(s.damageDealtToObjectives) AS DamagesToTurrets,
                                    AVG(s.totalDamageTaken) AS DamagesTaken,
                                    AVG(s.goldEarned) AS GoldEarned,
                                    AVG(s.goldSpent) AS GoldSpent,
                                    AVG(s.turretKills) AS TurretsKilled
                                 FROM LSTATS\RiotBundle\Entity\SummonerOneGameStat s
                                 LEFT JOIN s.game g
                                 WHERE s.summoner = :summoner AND
                                     g.queueId IN (' . implode(',', MatchsService::RANKED_QUEUE_IDS) . ')');
            $query->setParameter('summoner', $summoner);

            $stats = $query->getResult();

            if (!empty($stats))
                return $stats[0];
            return array();
        } catch (\Exception $e) {
            return array();
        }
    }

    public function getGlobalRankedStats()
    {
        try {
            $query = $this->getEntityManager()
                ->createQuery('SELECT AVG(s.kills) AS Kills,
                                        AVG(s.deaths) AS Deaths,
                                        AVG(s.assists) AS Assists,
                                        (AVG(s.kills)+AVG(s.assists)) / AVG(s.deaths) AS KDA,
                                        AVG(s.killingSprees) AS KillingSprees,
                                        AVG(s.totalDamageDealt) AS DamagesDealt,
                                        AVG(s.totalDamageDealtToChampions) AS DamagesToChampions,
                                        AVG(s.damageDealtToObjectives) AS DamagesToTurrets,
                                        AVG(s.totalDamageTaken) AS DamagesTaken,
                                        AVG(s.goldEarned) AS GoldEarned,
                                        AVG(s.goldSpent) AS GoldSpent,
                                        AVG(s.turretKills) AS TurretsKilled
                                     FROM LSTATS\RiotBundle\Entity\SummonerOneGameStat s
                                     LEFT JOIN s.game g
                                     WHERE g.queueId IN (' . implode(',', MatchsService::RANKED_QUEUE_IDS) . ')');

            $stats = $query->getResult();

            if (!empty($stats))
                return $stats[0];
            return null;
        } catch (\Exception $e) {
            return null;
        }
    }
}
